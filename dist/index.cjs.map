{"version":3,"sources":["../src/string.ts","../src/number.ts","../src/array.ts","../src/object.ts","../src/boolean.ts","../src/context.ts","../src/index.ts"],"names":["validate","self","data","validator","errors","value","result","string","defaultValue","msg","valid","values","min","max","length","pattern","number","array","items","v","_data","object","props","keys","failedKeys","key","_errors","err","boolean","get","target","set","ctx","api","fluent"],"mappings":";;;;AAEA,SAASA,EAAUC,CAAeC,CAAAA,CAAAA,CAAWC,CAAoF,CAAA,CAC/H,GAAI,CAACF,EAAK,QACR,CAAA,MAAM,IAAI,KAAA,CAAM,oCAAoC,CAAA,CAEtD,IAAMG,CAASH,CAAAA,CAAAA,CAAK,QAAS,CAAA,GAAA,CAAI,QAAUC,CAAAA,CAAAA,CAAM,EAAE,CAAA,CACnDD,EAAK,QAAS,CAAA,GAAA,CAAI,SAAUC,CAAME,CAAAA,CAAM,CACxCH,CAAAA,CAAAA,CAAK,QAAS,CAAA,GAAA,CAAI,QAASC,CAAME,CAAAA,CAAAA,CAAO,MAAW,GAAA,CAAC,CAEpD,CAAA,IAAMC,EAAQJ,CAAK,CAAA,QAAA,CAAS,GAAI,CAAA,OAAA,CAASC,CAAI,CAAA,CAC7C,GAAI,OAAOG,CAAAA,EAAU,SACnB,OAAAJ,CAAAA,CAAK,SAAS,GAAI,CAAA,OAAA,CAASC,CAAM,CAAA,CAAA,CAAK,CACjCE,CAAAA,CAAAA,CAAO,SAAS,gBAAgB,CAAA,GACnCA,CAAO,CAAA,IAAA,CAAK,gBAAgB,CAAA,CAC5BH,EAAK,QAAS,CAAA,GAAA,CAAI,QAAUC,CAAAA,CAAAA,CAAME,CAAM,CAAA,CAAA,CAEnCF,EAGT,IAAMI,CAAAA,CAASH,CAAU,CAAA,CAAE,KAAAE,CAAAA,CAAM,CAAC,CAClC,CAAA,OAAKC,CAAO,CAAA,KAAA,GACVL,CAAK,CAAA,QAAA,CAAS,IAAI,OAASC,CAAAA,CAAAA,CAAM,CAAK,CAAA,CAAA,CACtCE,CAAO,CAAA,IAAA,CAAKE,EAAO,KAAK,CAAA,CACxBL,CAAK,CAAA,QAAA,CAAS,GAAI,CAAA,QAAA,CAAUC,EAAME,CAAM,CAAA,CAAA,CAGnCF,CACT,CAEO,IAAMK,EAAS,CACpB,MAAA,CAAsBL,CAAW,CAAA,CAC/B,GAAI,CACF,KAAK,QAAS,CAAA,GAAA,CAAI,OAASA,CAAAA,CAAAA,CAAMA,CAAK,CAAA,KAAA,CAAM,UAAU,EACxD,CAAY,KAAA,EAEZ,OAAOF,EAAS,IAAME,CAAAA,CAAAA,CAAM,KACnB,CAAE,KAAA,CAAO,GAAM,KAAO,CAAA,IAAK,CACnC,CAAA,CACH,CACA,CAAA,OAAA,CAAuBA,EAAWM,CAAsB,CAAA,CACtD,IAAMH,CAAAA,CAAQ,IAAK,CAAA,QAAA,CAAS,IAAI,OAASH,CAAAA,CAAAA,CAAM,IAAI,CAAA,CACnD,OAA2BG,CAAAA,EAAU,MACnC,IAAK,CAAA,QAAA,CAAS,IAAI,OAASH,CAAAA,CAAAA,CAAMM,CAAY,CAGxCR,CAAAA,CAAAA,CAAS,IAAME,CAAAA,CAAAA,CAAM,KACnB,CAAE,MAAO,CAAM,CAAA,CAAA,KAAA,CAAO,IAAK,CAAA,CACnC,CACH,CAAA,CACA,SAAwBA,CAAWO,CAAAA,CAAAA,CAAc,EAAI,CAAA,CACnD,OAAOT,CAAAA,CAAS,KAAME,CAAM,CAAA,CAAC,CAAE,KAAA,CAAAG,CAAM,CAAA,GAAM,CACzC,IAAMK,CAAAA,CAAQ,CAAC,EAAEL,CAASA,EAAAA,CAAAA,CAAM,OAAS,CACzC,CAAA,CAAA,OAAO,CAAE,KAAA,CAAAK,CAAO,CAAA,KAAA,CAAOA,EAAQ,IAAOD,CAAAA,CAAAA,EAAO,oBAAqB,CACpE,CAAC,CACH,EACA,IAAoBP,CAAAA,CAAAA,CAAWS,EAAkBF,CAAc,CAAA,EAAA,CAAI,CACjE,OAAOT,CAAAA,CAAS,IAAME,CAAAA,CAAAA,CAAM,CAAC,CAAE,MAAAG,CAAM,CAAA,GAAM,CACzC,IAAMK,CAAQC,CAAAA,CAAAA,CAAO,SAASN,CAAK,CAAA,CACnC,OAAO,CAAE,KAAAK,CAAAA,CAAAA,CAAO,MAAOA,CAAQ,CAAA,IAAA,CAAOD,GAAO,eAAgB,CAC/D,CAAC,CACH,CAAA,CACA,GAAmBP,CAAAA,CAAAA,CAAWU,CAAaH,CAAAA,CAAAA,CAAc,GAAI,CAC3D,OAAOT,CAAS,CAAA,IAAA,CAAME,CAAM,CAAA,CAAC,CAAE,KAAAG,CAAAA,CAAM,CAAM,GAAA,CACzC,IAAMK,CAAAA,CAAQ,CAAC,EAAEL,CAAAA,EAASA,EAAM,MAAUO,EAAAA,CAAAA,CAAAA,CAC1C,OAAO,CAAE,KAAA,CAAAF,CAAO,CAAA,KAAA,CAAOA,CAAQ,CAAA,IAAA,CAAOD,GAAO,CAA0BG,uBAAAA,EAAAA,CAAG,CAAG,CAAA,CAC/E,CAAC,CACH,EACA,GAAmBV,CAAAA,CAAAA,CAAWW,CAAaJ,CAAAA,CAAAA,CAAc,EAAI,CAAA,CAC3D,OAAOT,CAAS,CAAA,IAAA,CAAME,CAAM,CAAA,CAAC,CAAE,KAAA,CAAAG,CAAM,CAAM,GAAA,CACzC,IAAMK,CAAAA,CAAQ,CAAC,EAAEL,GAASA,CAAM,CAAA,MAAA,EAAUQ,CAC1C,CAAA,CAAA,OAAO,CAAE,KAAA,CAAAH,EAAO,KAAOA,CAAAA,CAAAA,CAAQ,IAAOD,CAAAA,CAAAA,EAAO,CAAyBI,sBAAAA,EAAAA,CAAG,EAAG,CAC9E,CAAC,CACH,CACA,CAAA,MAAA,CAAsBX,EAAWY,CAAgBL,CAAAA,CAAAA,CAAc,EAAI,CAAA,CACjE,OAAOT,CAAAA,CAAS,KAAME,CAAM,CAAA,CAAC,CAAE,KAAA,CAAAG,CAAM,CAAA,GAAM,CACzC,IAAMK,CAAAA,CAAQ,CAAC,EAAEL,CAASA,EAAAA,CAAAA,CAAM,SAAWS,CAC3C,CAAA,CAAA,OAAO,CAAE,KAAA,CAAAJ,CAAO,CAAA,KAAA,CAAOA,EAAQ,IAAOD,CAAAA,CAAAA,EAAO,CAA2BK,wBAAAA,EAAAA,CAAM,CAAG,CAAA,CACnF,CAAC,CACH,CAAA,CACA,KAAqBZ,CAAAA,CAAAA,CAAWa,CAAiBN,CAAAA,CAAAA,CAAc,GAAI,CACjE,OAAOT,CAAS,CAAA,IAAA,CAAME,CAAM,CAAA,CAAC,CAAE,KAAAG,CAAAA,CAAM,IAAM,CACzC,IAAMK,EAAQ,IAAI,MAAA,CAAOK,CAAO,CAAA,CAAE,IAAKV,CAAAA,CAAK,EAC5C,OAAO,CAAE,KAAAK,CAAAA,CAAAA,CAAO,KAAOA,CAAAA,CAAAA,CAAQ,KAAOD,CAAO,EAAA,iBAAkB,CACjE,CAAC,CACH,CACF,ECpFA,SAAST,CAAAA,CAAUC,CAAeC,CAAAA,CAAAA,CAAWC,CAAoF,CAAA,CAC/H,GAAI,CAACF,CAAAA,CAAK,QACR,CAAA,MAAM,IAAI,KAAA,CAAM,oCAAoC,CAEtD,CAAA,IAAMG,CAASH,CAAAA,CAAAA,CAAK,QAAS,CAAA,GAAA,CAAI,SAAUC,CAAM,CAAA,EAAE,CAAA,CACnDD,CAAK,CAAA,QAAA,CAAS,IAAI,QAAUC,CAAAA,CAAAA,CAAME,CAAM,CACxCH,CAAAA,CAAAA,CAAK,SAAS,GAAI,CAAA,OAAA,CAASC,CAAME,CAAAA,CAAAA,CAAO,MAAW,GAAA,CAAC,EAEpD,IAAMC,CAAAA,CAAQJ,CAAK,CAAA,QAAA,CAAS,GAAI,CAAA,OAAA,CAASC,CAAI,CAC7C,CAAA,GAAI,OAAOG,CAAAA,EAAU,QACnB,CAAA,OAAAJ,EAAK,QAAS,CAAA,GAAA,CAAI,QAASC,CAAM,CAAA,CAAA,CAAK,EACjCE,CAAO,CAAA,QAAA,CAAS,gBAAgB,CAAA,GACnCA,CAAO,CAAA,IAAA,CAAK,gBAAgB,CAC5BH,CAAAA,CAAAA,CAAK,QAAS,CAAA,GAAA,CAAI,QAAUC,CAAAA,CAAAA,CAAME,CAAM,CAEnCF,CAAAA,CAAAA,CAAAA,CAGT,IAAMI,CAAAA,CAASH,CAAU,CAAA,CAAE,MAAAE,CAAM,CAAC,EAClC,OAAKC,CAAAA,CAAO,QACVL,CAAK,CAAA,QAAA,CAAS,GAAI,CAAA,OAAA,CAASC,CAAM,CAAA,CAAA,CAAK,EACtCE,CAAO,CAAA,IAAA,CAAKE,CAAO,CAAA,KAAK,CACxBL,CAAAA,CAAAA,CAAK,SAAS,GAAI,CAAA,QAAA,CAAUC,CAAME,CAAAA,CAAM,CAGnCF,CAAAA,CAAAA,CACT,CAEO,IAAMc,CAAAA,CAAS,CACpB,MAAA,CAAsBd,CAAW,CAAA,CAC/B,GAAI,CACF,IAAMG,CAAQ,CAAA,IAAA,CAAK,QAAS,CAAA,GAAA,CAAI,QAASH,CAAM,CAAA,CAAC,CAChD,CAAA,IAAA,CAAK,QAAS,CAAA,GAAA,CAAI,QAASA,CAAM,CAAA,MAAA,CAAOG,CAAK,CAAC,EAChD,CAAA,KAAY,EAEZ,OAAOL,EAAS,IAAME,CAAAA,CAAAA,CAAM,KACnB,CAAE,KAAA,CAAO,CAAM,CAAA,CAAA,KAAA,CAAO,IAAK,CAAA,CACnC,CACH,CACA,CAAA,OAAA,CAAuBA,CAAWM,CAAAA,CAAAA,CAAsB,CACtD,IAAMH,EAAQ,IAAK,CAAA,QAAA,CAAS,GAAI,CAAA,OAAA,CAASH,CAAM,CAAA,IAAI,EACnD,OAA2BG,CAAAA,EAAU,MACnC,IAAK,CAAA,QAAA,CAAS,IAAI,OAASH,CAAAA,CAAAA,CAAMM,CAAY,CAAA,CAGxCR,CAAS,CAAA,IAAA,CAAME,EAAM,KACnB,CAAE,KAAO,CAAA,CAAA,CAAA,CAAM,KAAO,CAAA,IAAK,EACnC,CACH,CAAA,CACA,QAAwBA,CAAAA,CAAAA,CAAWO,CAAc,CAAA,EAAA,CAAI,CACnD,OAAOT,CAAAA,CAAS,KAAME,CAAM,CAAA,CAAC,CAAE,KAAAG,CAAAA,CAAM,CAAM,GAAA,CACzC,IAAMK,CAAAA,CAA+BL,GAAU,IAC/C,CAAA,OAAO,CAAE,KAAA,CAAAK,CAAO,CAAA,KAAA,CAAOA,EAAQ,IAAOD,CAAAA,CAAAA,EAAO,oBAAqB,CACpE,CAAC,CACH,EACA,IAAoBP,CAAAA,CAAAA,CAAWS,CAAkBF,CAAAA,CAAAA,CAAc,EAAI,CAAA,CACjE,OAAOT,CAAS,CAAA,IAAA,CAAME,CAAM,CAAA,CAAC,CAAE,KAAA,CAAAG,CAAM,CAAM,GAAA,CACzC,IAAMK,CAAAA,CAAQC,CAAO,CAAA,QAAA,CAASN,CAAK,CACnC,CAAA,OAAO,CAAE,KAAA,CAAAK,CAAO,CAAA,KAAA,CAAOA,EAAQ,IAAOD,CAAAA,CAAAA,EAAO,eAAgB,CAC/D,CAAC,CACH,CACA,CAAA,GAAA,CAAmBP,CAAWU,CAAAA,CAAAA,CAAaH,CAAc,CAAA,EAAA,CAAI,CAC3D,OAAOT,CAAAA,CAAS,IAAME,CAAAA,CAAAA,CAAM,CAAC,CAAE,MAAAG,CAAM,CAAA,GAAM,CACzC,IAAMK,CAAQL,CAAAA,CAAAA,EAASO,EACvB,OAAO,CAAE,MAAAF,CAAO,CAAA,KAAA,CAAOA,EAAQ,IAAOD,CAAAA,CAAAA,EAAO,CAAyBG,sBAAAA,EAAAA,CAAG,CAAG,CAAA,CAC9E,CAAC,CACH,CAAA,CACA,GAAmBV,CAAAA,CAAAA,CAAWW,CAAaJ,CAAAA,CAAAA,CAAc,GAAI,CAC3D,OAAOT,CAAS,CAAA,IAAA,CAAME,CAAM,CAAA,CAAC,CAAE,KAAAG,CAAAA,CAAM,IAAM,CACzC,IAAMK,EAAQL,CAASQ,EAAAA,CAAAA,CACvB,OAAO,CAAE,KAAAH,CAAAA,CAAAA,CAAO,MAAOA,CAAQ,CAAA,IAAA,CAAOD,CAAO,EAAA,CAAA,sBAAA,EAAyBI,CAAG,CAAA,CAAG,CAC9E,CAAC,CACH,CACA,CAAA,OAAA,CAAuBX,CAAWO,CAAAA,CAAAA,CAAc,GAAI,CAClD,OAAOT,CAAS,CAAA,IAAA,CAAME,CAAM,CAAA,CAAC,CAAE,KAAAG,CAAAA,CAAM,CAAM,GAAA,CACzC,IAAMK,CAAAA,CAAQ,OAAO,SAAUL,CAAAA,CAAK,CACpC,CAAA,OAAO,CAAE,KAAA,CAAAK,EAAO,KAAOA,CAAAA,CAAAA,CAAQ,IAAOD,CAAAA,CAAAA,EAAO,iBAAkB,CACjE,CAAC,CACH,CACF,EC/EA,SAAST,CAAAA,CACPC,EACAC,CACAC,CAAAA,CAAAA,CAIA,CACA,GAAI,CAACF,CAAAA,CAAK,SAAU,MAAM,IAAI,KAAM,CAAA,oCAAoC,CAExE,CAAA,IAAMG,EAASH,CAAK,CAAA,QAAA,CAAS,GAAI,CAAA,QAAA,CAAUC,CAAM,CAAA,EAAE,CACnDD,CAAAA,CAAAA,CAAK,QAAS,CAAA,GAAA,CAAI,QAAUC,CAAAA,CAAAA,CAAME,CAAM,CACxCH,CAAAA,CAAAA,CAAK,QAAS,CAAA,GAAA,CAAI,OAASC,CAAAA,CAAAA,CAAME,EAAO,MAAW,GAAA,CAAC,CAEpD,CAAA,IAAMC,CAAQJ,CAAAA,CAAAA,CAAK,SAAS,GAAI,CAAA,OAAA,CAASC,CAAI,CAAA,CAC7C,GAAI,CAAC,MAAM,OAAQG,CAAAA,CAAK,EACtB,OAAAJ,CAAAA,CAAK,SAAS,GAAI,CAAA,OAAA,CAASC,CAAM,CAAA,CAAA,CAAK,CACjCE,CAAAA,CAAAA,CAAO,SAAS,eAAe,CAAA,GAClCA,CAAO,CAAA,IAAA,CAAK,eAAe,CAAA,CAC3BH,EAAK,QAAS,CAAA,GAAA,CAAI,QAAUC,CAAAA,CAAAA,CAAME,CAAM,CAAA,CAAA,CAEnCF,EAGT,IAAMI,CAAAA,CAASH,CAAU,CAAA,CAAE,KAAAE,CAAAA,CAAM,CAAC,CAClC,CAAA,OAAKC,CAAO,CAAA,KAAA,GACVL,CAAK,CAAA,QAAA,CAAS,IAAI,OAASC,CAAAA,CAAAA,CAAM,CAAK,CAAA,CAAA,CACtCE,CAAO,CAAA,IAAA,CAAKE,EAAO,KAAK,CAAA,CACxBL,CAAK,CAAA,QAAA,CAAS,GAAI,CAAA,QAAA,CAAUC,EAAME,CAAM,CAAA,CAAA,CAGnCF,CACT,CAEO,IAAMe,EAAQ,CACnB,MAAA,CAAsBf,CAAW,CAAA,CAC/B,GAAI,CACF,KAAK,QAAS,CAAA,GAAA,CAAI,OAASA,CAAAA,CAAAA,CAAM,IAAK,CAAA,KAAA,CAAMA,EAAK,KAAK,CAAC,EACzD,CAAA,KAAY,EAEZ,OAAOF,CAAS,CAAA,IAAA,CAAME,EAAM,KACnB,CAAE,MAAO,CAAM,CAAA,CAAA,KAAA,CAAO,IAAK,CAAA,CACnC,CACH,CAAA,CACA,QAAuBA,CAAWM,CAAAA,CAAAA,CAAqB,CACrD,IAAMH,CAAQ,CAAA,IAAA,CAAK,SAAS,GAAI,CAAA,OAAA,CAASH,CAAI,CAAA,CAC7C,OAA2BG,CAAAA,EAAU,MACnC,IAAK,CAAA,QAAA,CAAS,IAAI,OAASH,CAAAA,CAAAA,CAAMM,CAAY,CAGxCR,CAAAA,CAAAA,CAAS,IAAME,CAAAA,CAAAA,CAAM,KACnB,CAAE,MAAO,CAAM,CAAA,CAAA,KAAA,CAAO,IAAK,CAAA,CACnC,CACH,CAAA,CACA,SAAwBA,CAAWO,CAAAA,CAAAA,CAAc,EAAI,CAAA,CACnD,OAAOT,CAAAA,CAAS,KAAME,CAAM,CAAA,CAAC,CAAE,KAAA,CAAAG,CAAM,CAAA,GAAM,CACzC,IAAMK,CAAAA,CAAQL,CAASA,EAAAA,CAAAA,CAAM,MAAS,CAAA,CAAA,CACtC,OAAO,CAAE,KAAA,CAAAK,CAAO,CAAA,KAAA,CAAOA,CAAQ,CAAA,IAAA,CAAOD,GAAO,mBAAoB,CACnE,CAAC,CACH,CACA,CAAA,GAAA,CAAmBP,EAAWU,CAAaH,CAAAA,CAAAA,CAAc,GAAI,CAC3D,OAAOT,EAAS,IAAME,CAAAA,CAAAA,CAAM,CAAC,CAAE,KAAAG,CAAAA,CAAM,IAAM,CACzC,IAAMK,CAAQL,CAAAA,CAAAA,EAASA,CAAM,CAAA,MAAA,EAAUO,EACvC,OAAO,CACL,KAAAF,CAAAA,CAAAA,CACA,KAAOA,CAAAA,CAAAA,CAAQ,KAAOD,CAAO,EAAA,CAAA,uBAAA,EAA0BG,CAAG,CAC5D,CAAA,CACF,CAAC,CACH,CAAA,CACA,GAAmBV,CAAAA,CAAAA,CAAWW,CAAaJ,CAAAA,CAAAA,CAAc,GAAI,CAC3D,OAAOT,CAAS,CAAA,IAAA,CAAME,CAAM,CAAA,CAAC,CAAE,KAAAG,CAAAA,CAAM,CAAM,GAAA,CACzC,IAAMK,CAAAA,CAAQL,GAASA,CAAM,CAAA,MAAA,EAAUQ,EACvC,OAAO,CACL,MAAAH,CACA,CAAA,KAAA,CAAOA,CAAQ,CAAA,IAAA,CAAOD,CAAO,EAAA,CAAA,sBAAA,EAAyBI,CAAG,CAC3D,CAAA,CACF,CAAC,CACH,CACA,CAAA,KAAA,CAAqBX,EAAWgB,CAAYT,CAAAA,CAAAA,CAAc,EAAI,CAAA,CAC5D,OAAOT,CAAAA,CAAS,KAAME,CAAM,CAAA,CAAC,CAAE,KAAA,CAAAG,CAAM,CAAA,GAAM,CACzC,IAAMK,CAAAA,CACJL,CACAA,EAAAA,CAAAA,CAAM,KAAOc,CAAAA,CAAAA,EAAW,CACtB,IAAMC,CAAAA,CAAQ,EAAC,CACf,OAAK,IAAA,CAAA,QAAA,CAAS,IAAI,OAASA,CAAAA,CAAAA,CAAOD,CAAC,CAAA,CAE5BD,CAAM,CAAA,GAAA,CAAIE,CAAK,CAAE,CAAA,KAC1B,CAAC,CACH,CAAA,OAAO,CACL,KAAAV,CAAAA,CAAAA,CACA,KAAOA,CAAAA,CAAAA,CACH,IACAD,CAAAA,CAAAA,EACA,4BAA4BS,CAAM,CAAA,KAAA,CAAM,CAAC,CAAA,CAAE,MAAO,CAAA,KAAA,CAAM,GAAG,CAAE,CAAA,CAAC,CAAC,CAAA,CACrE,CACF,CAAC,CACH,CACF,CAAA,CCjGA,SAASlB,CAAUC,CAAAA,CAAAA,CAAeC,EAAWC,CAAoF,CAAA,CAC/H,GAAI,CAACF,CAAK,CAAA,QAAA,CACR,MAAM,IAAI,KAAA,CAAM,oCAAoC,CAAA,CAEtD,IAAMG,CAAAA,CAASH,EAAK,QAAS,CAAA,GAAA,CAAI,QAAUC,CAAAA,CAAAA,CAAM,EAAE,EACnDD,CAAK,CAAA,QAAA,CAAS,IAAI,QAAUC,CAAAA,CAAAA,CAAME,CAAM,CACxCH,CAAAA,CAAAA,CAAK,QAAS,CAAA,GAAA,CAAI,OAASC,CAAAA,CAAAA,CAAME,EAAO,MAAW,GAAA,CAAC,CAEpD,CAAA,IAAMC,CAAQJ,CAAAA,CAAAA,CAAK,SAAS,GAAI,CAAA,OAAA,CAASC,CAAI,CAAA,CAC7C,GAAI,OAAOG,GAAU,QAAYA,EAAAA,CAAAA,GAAU,IACzC,CAAA,OAAAJ,CAAK,CAAA,QAAA,CAAS,IAAI,OAASC,CAAAA,CAAAA,CAAM,CAAK,CAAA,CAAA,CACjCE,CAAO,CAAA,QAAA,CAAS,gBAAgB,CACnCA,GAAAA,CAAAA,CAAO,IAAK,CAAA,gBAAgB,CAC5BH,CAAAA,CAAAA,CAAK,SAAS,GAAI,CAAA,QAAA,CAAUC,CAAME,CAAAA,CAAM,CAEnCF,CAAAA,CAAAA,CAAAA,CAGT,IAAMI,CAASH,CAAAA,CAAAA,CAAU,CAAE,KAAAE,CAAAA,CAAM,CAAC,CAClC,CAAA,OAAKC,CAAO,CAAA,KAAA,GACVL,CAAK,CAAA,QAAA,CAAS,IAAI,OAASC,CAAAA,CAAAA,CAAM,CAAK,CAAA,CAAA,CACtCE,CAAO,CAAA,IAAA,CAAKE,EAAO,KAAK,CAAA,CACxBL,CAAK,CAAA,QAAA,CAAS,GAAI,CAAA,QAAA,CAAUC,EAAME,CAAM,CAAA,CAAA,CAGnCF,CACT,CAEO,IAAMmB,CAAAA,CAAS,CACpB,MAAsBnB,CAAAA,CAAAA,CAAW,CAC/B,GAAI,CACF,IAAA,CAAK,SAAS,GAAI,CAAA,OAAA,CAASA,CAAM,CAAA,IAAA,CAAK,KAAMA,CAAAA,CAAAA,CAAK,KAAK,CAAC,EACzD,CAAY,KAAA,EAEZ,OAAOF,EAAS,IAAME,CAAAA,CAAAA,CAAM,KACnB,CAAE,KAAA,CAAO,GAAM,KAAO,CAAA,IAAK,CACnC,CAAA,CACH,CACA,CAAA,OAAA,CAAuBA,EAAWM,CAAmC,CAAA,CACnE,IAAMH,CAAAA,CAAQ,IAAK,CAAA,QAAA,CAAS,IAAI,OAASH,CAAAA,CAAAA,CAAM,IAAI,CAAA,CACnD,OAA2BG,CAAAA,EAAU,MACnC,IAAK,CAAA,QAAA,CAAS,GAAI,CAAA,OAAA,CAASH,CAAMM,CAAAA,CAAY,EAGxCR,CAAS,CAAA,IAAA,CAAME,CAAM,CAAA,KACnB,CAAE,KAAA,CAAO,GAAM,KAAO,CAAA,IAAK,CACnC,CAAA,CACH,CACA,CAAA,QAAA,CAAwBA,EAAWO,CAAc,CAAA,EAAA,CAAI,CACnD,OAAOT,CAAS,CAAA,IAAA,CAAME,EAAM,CAAC,CAAE,MAAAG,CAAM,CAAA,GAAM,CACzC,IAAMK,CAAAA,CAAQL,CAAS,EAAA,MAAA,CAAO,IAAKA,CAAAA,CAAK,EAAE,MAAS,CAAA,CAAA,CACnD,OAAO,CAAE,KAAAK,CAAAA,CAAAA,CAAO,MAAOA,CAAQ,CAAA,IAAA,CAAOD,CAAO,EAAA,oBAAqB,CACpE,CAAC,CACH,CACA,CAAA,KAAA,CAAqBP,EAAWoB,CAA4Bb,CAAAA,CAAAA,CAAc,GAAI,CAC5E,OAAOT,CAAS,CAAA,IAAA,CAAME,CAAM,CAAA,CAAC,CAAE,KAAAG,CAAAA,CAAM,CAAM,GAAA,CACzC,IAAMkB,CAAAA,CAAO,OAAO,IAAKD,CAAAA,CAAK,CAC1BZ,CAAAA,CAAAA,CAAQ,CACRc,CAAAA,CAAAA,CAAAA,CAAuB,EAE3B,CAAA,IAAA,IAAWC,KAAOF,CAAM,CAAA,CACtB,IAAMpB,CAAYmB,CAAAA,CAAAA,CAAMG,CAAG,CAAA,CACrBL,CAAQ,CAAA,GACRhB,CAAS,CAAA,IAAA,CAAK,QAAS,CAAA,GAAA,CAAI,QAAUgB,CAAAA,CAAAA,CAAO,EAAE,CAAA,CACpD,IAAK,CAAA,QAAA,CAAS,GAAI,CAAA,OAAA,CAASA,EAAOf,CAAMoB,CAAAA,CAAG,CAAC,CAAA,CAE5C,IAAMnB,CAAAA,CAASH,EAAU,GAAIiB,CAAAA,CAAK,CAClC,CAAA,GAAI,CAACd,CAAAA,CAAO,MAAO,CACjBI,CAAAA,CAAQ,CACR,CAAA,CAAA,IAAMgB,CAAU,CAAA,IAAA,CAAK,SAAS,GAAI,CAAA,QAAA,CAAUpB,CAAQ,CAAA,EAAE,CAAA,CACtDF,EAAO,IAAK,CAAA,GAAGsB,EAAQ,GAAKC,CAAAA,CAAAA,EAAgB,GAAGF,CAAG,CAAA,EAAA,EAAKE,CAAG,CAAA,CAAE,CAAC,CAAA,CAC7DH,EAAW,IAAKC,CAAAA,CAAG,EACrB,CACF,CACA,OAAKf,EAIE,CAAE,KAAA,CAAO,CAAM,CAAA,CAAA,KAAA,CAAO,IAAK,CAAA,CAFzB,CAAE,KAAO,CAAA,CAAA,CAAA,CAAO,KADTD,CAAAA,CAAAA,EAAOe,CAAW,CAAA,MAAA,CAAS,mBAAmBA,CAAW,CAAA,IAAA,CAAK,IAAI,CAAC,CAAK,CAAA,CAAA,EACzD,CAGjC,CAAC,CACH,CACF,CAAA,CCjFA,SAASxB,CAAAA,CAAUC,EAAeC,CAAWC,CAAAA,CAAAA,CAAoF,CAC/H,GAAI,CAACF,CAAAA,CAAK,SACR,MAAM,IAAI,MAAM,oCAAoC,CAAA,CAEtD,IAAMG,CAASH,CAAAA,CAAAA,CAAK,QAAS,CAAA,GAAA,CAAI,QAAUC,CAAAA,CAAAA,CAAM,EAAE,CAAA,CACnDD,CAAK,CAAA,QAAA,CAAS,GAAI,CAAA,QAAA,CAAUC,EAAME,CAAM,CAAA,CACxCH,CAAK,CAAA,QAAA,CAAS,GAAI,CAAA,OAAA,CAASC,EAAME,CAAO,CAAA,MAAA,GAAW,CAAC,CAAA,CAEpD,IAAMC,CAAAA,CAAQJ,EAAK,QAAS,CAAA,GAAA,CAAI,OAASC,CAAAA,CAAI,CAC7C,CAAA,GAAI,OAAOG,CAAU,EAAA,SAAA,CACnB,OAAAJ,CAAAA,CAAK,QAAS,CAAA,GAAA,CAAI,QAASC,CAAM,CAAA,CAAA,CAAK,CACjCE,CAAAA,CAAAA,CAAO,QAAS,CAAA,iBAAiB,IACpCA,CAAO,CAAA,IAAA,CAAK,iBAAiB,CAC7BH,CAAAA,CAAAA,CAAK,SAAS,GAAI,CAAA,QAAA,CAAUC,CAAME,CAAAA,CAAM,CAEnCF,CAAAA,CAAAA,CAAAA,CAGT,IAAMI,CAASH,CAAAA,CAAAA,CAAU,CAAE,KAAA,CAAAE,CAAM,CAAC,EAClC,OAAKC,CAAAA,CAAO,KACVL,GAAAA,CAAAA,CAAK,QAAS,CAAA,GAAA,CAAI,QAASC,CAAM,CAAA,CAAA,CAAK,EACtCE,CAAO,CAAA,IAAA,CAAKE,EAAO,KAAK,CAAA,CACxBL,CAAK,CAAA,QAAA,CAAS,GAAI,CAAA,QAAA,CAAUC,EAAME,CAAM,CAAA,CAAA,CAGnCF,CACT,CAEO,IAAM0B,CAAAA,CAAU,CACrB,MAAsB1B,CAAAA,CAAAA,CAAW,CAC/B,GAAI,CACF,IAAMG,EAAQ,IAAK,CAAA,QAAA,CAAS,IAAI,OAASH,CAAAA,CAAAA,CAAM,EAAK,CACpD,CAAA,IAAA,CAAK,QAAS,CAAA,GAAA,CAAI,OAASA,CAAAA,CAAAA,CAAM,EAAQG,CAAM,EACjD,CAAY,KAAA,EAEZ,OAAOL,EAAS,IAAME,CAAAA,CAAAA,CAAM,KACnB,CAAE,KAAO,CAAA,CAAA,CAAA,CAAM,MAAO,IAAK,CAAA,CACnC,CACH,CAAA,CACA,OAAuBA,CAAAA,CAAAA,CAAWM,EAAuB,CACvD,IAAMH,CAAQ,CAAA,IAAA,CAAK,QAAS,CAAA,GAAA,CAAI,QAASH,CAAM,CAAA,IAAI,CACnD,CAAA,OAA2BG,CAAU,EAAA,IAAA,EACnC,KAAK,QAAS,CAAA,GAAA,CAAI,OAASH,CAAAA,CAAAA,CAAMM,CAAY,CAAA,CAGxCR,EAAS,IAAME,CAAAA,CAAAA,CAAM,KACnB,CAAE,KAAA,CAAO,GAAM,KAAO,CAAA,IAAK,CACnC,CAAA,CACH,CACA,CAAA,QAAA,CAAwBA,EAAWO,CAAc,CAAA,EAAA,CAAI,CACnD,OAAOT,CAAS,CAAA,IAAA,CAAME,EAAM,CAAC,CAAE,KAAAG,CAAAA,CAAM,CAAM,GAAA,CACzC,IAAMK,CAA+BL,CAAAA,CAAAA,EAAU,IAC/C,CAAA,OAAO,CAAE,KAAA,CAAAK,EAAO,KAAOA,CAAAA,CAAAA,CAAQ,IAAOD,CAAAA,CAAAA,EAAO,qBAAsB,CACrE,CAAC,CACH,CACF,CCvDO,CAAA,SAASoB,CAAIC,CAAAA,CAAAA,CAAsC5B,EAAWM,CAAoB,CAAA,CACvF,OAAAN,CAAAA,CAAK4B,CAAM,CAAA,CAAI5B,EAAK4B,CAAM,CAAA,EAAKtB,EACxBN,CAAK4B,CAAAA,CAAM,CACpB,CAEO,SAASC,CAAID,CAAAA,CAAAA,CAAsC5B,CAAWG,CAAAA,CAAAA,CAAY,CAC/E,OAAAH,CAAAA,CAAK4B,CAAM,CAAA,CAAIzB,CACRH,CAAAA,CACT,CAEa8B,IAAAA,CAAAA,CAAe,CAC1B,QAAA,CAAU,CACR,GAAA,CAAAD,EACA,GAAAF,CAAAA,CACF,CACF,ECAaI,IAAAA,CAAAA,CAAW,CACtB,MAAA1B,CAAAA,CAAAA,CACA,MAAAS,CAAAA,CAAAA,CACA,KAAAC,CAAAA,CAAAA,CACA,OAAAI,CACA,CAAA,OAAA,CAAAO,CACF,CAAA,CAEa5B,CAAWkC,CAAAA,aAAAA,CAAO,CAAE,GAAAD,CAAAA,CAAAA,CAAK,GAAAD,CAAAA,CAAI,CAAC","file":"index.cjs","sourcesContent":["import { Context } from \"./types\";\n\nfunction validate (self: Context, data: any, validator: ({ value }: { value: any }) => { valid: boolean, error: string | null }) {\n  if (!self.validate)\n    throw new Error(\"validate is not defined in context\");\n\n  const errors = self.validate.get(\"errors\", data, []);\n  self.validate.set(\"errors\", data, errors);\n  self.validate.set(\"valid\", data, errors.length === 0);\n\n  const value = self.validate.get(\"value\", data) as any;\n  if (typeof value !== \"string\") {\n    self.validate.set(\"valid\", data, false);\n    if (!errors.includes(\"invalid string\")) {\n      errors.push(\"invalid string\");\n      self.validate.set(\"errors\", data, errors);\n    }\n    return data;\n  }\n\n  const result = validator({ value });\n  if (!result.valid) {\n    self.validate.set(\"valid\", data, false);\n    errors.push(result.error);\n    self.validate.set(\"errors\", data, errors);\n  }\n\n  return data;\n}\n\nexport const string = {\n  coerce(this: Context, data: any) {\n    try {\n      this.validate.set(\"value\", data, data.value.toString());\n    } catch (e) {}\n\n    return validate(this, data, () => {\n      return { valid: true, error: null };\n    });\n  },\n  default(this: Context, data: any, defaultValue: string) {\n    const value = this.validate.get(\"value\", data, null);\n    if (value === undefined || value === null) {\n      this.validate.set(\"value\", data, defaultValue);\n    }\n\n    return validate(this, data, () => {\n      return { valid: true, error: null };\n    });\n  },\n  required(this: Context, data: any, msg: string = \"\") {\n    return validate(this, data, ({ value }) => {\n      const valid = !!(value && value.length > 0);\n      return { valid, error: valid ? null : msg || \"string is required\" };\n    });\n  },\n  enum(this: Context, data: any, values: string[], msg: string = \"\") {\n    return validate(this, data, ({ value }) => {\n      const valid = values.includes(value);\n      return { valid, error: valid ? null : msg || \"invalid value\" };\n    });\n  },\n  min(this: Context, data: any, min: number, msg: string = \"\") {\n    return validate(this, data, ({ value }) => {\n      const valid = !!(value && value.length >= min);\n      return { valid, error: valid ? null : msg || `too short - min length ${min}` };\n    });\n  },\n  max(this: Context, data: any, max: number, msg: string = \"\") {\n    return validate(this, data, ({ value }) => {\n      const valid = !!(value && value.length <= max);\n      return { valid, error: valid ? null : msg || `too long - max length ${max}` };\n    });\n  },\n  length(this: Context, data: any, length: number, msg: string = \"\") {\n    return validate(this, data, ({ value }) => {\n      const valid = !!(value && value.length === length);\n      return { valid, error: valid ? null : msg || `invalid length - length ${length}` };\n    });\n  },\n  match(this: Context, data: any, pattern: string, msg: string = \"\") {\n    return validate(this, data, ({ value }) => {\n      const valid = new RegExp(pattern).test(value);\n      return { valid, error: valid ? null : msg || \"invalid pattern\" };\n    });\n  }\n}\n","import { Context } from \"./types\";\n\nfunction validate (self: Context, data: any, validator: ({ value }: { value: any }) => { valid: boolean, error: string | null }) {\n  if (!self.validate) \n    throw new Error(\"validate is not defined in context\");\n\n  const errors = self.validate.get(\"errors\", data, []);\n  self.validate.set(\"errors\", data, errors);\n  self.validate.set(\"valid\", data, errors.length === 0);\n\n  const value = self.validate.get(\"value\", data) as number;\n  if (typeof value !== \"number\") {\n    self.validate.set(\"valid\", data, false);\n    if (!errors.includes(\"invalid number\")) {\n      errors.push(\"invalid number\");\n      self.validate.set(\"errors\", data, errors);\n    }\n    return data;\n  }\n\n  const result = validator({ value });\n  if (!result.valid) {\n    self.validate.set(\"valid\", data, false);\n    errors.push(result.error);\n    self.validate.set(\"errors\", data, errors);\n  }\n\n  return data;\n}\n\nexport const number = {\n  coerce(this: Context, data: any) {\n    try {\n      const value = this.validate.get(\"value\", data, 0);\n      this.validate.set(\"value\", data, Number(value));\n    } catch (e) {}\n\n    return validate(this, data, () => {\n      return { valid: true, error: null };\n    });\n  },\n  default(this: Context, data: any, defaultValue: number) {\n    const value = this.validate.get(\"value\", data, null);\n    if (value === undefined || value === null) {\n      this.validate.set(\"value\", data, defaultValue);\n    }\n    \n    return validate(this, data, () => {\n      return { valid: true, error: null };\n    });\n  },\n  required(this: Context, data: any, msg: string = \"\") {\n    return validate(this, data, ({ value }) => {\n      const valid = value !== undefined && value !== null;\n      return { valid, error: valid ? null : msg || \"number is required\" };\n    });\n  },\n  enum(this: Context, data: any, values: number[], msg: string = \"\") {\n    return validate(this, data, ({ value }) => {\n      const valid = values.includes(value);\n      return { valid, error: valid ? null : msg || \"invalid value\" };\n    });\n  },\n  min(this: Context, data: any, min: number, msg: string = \"\") {\n    return validate(this, data, ({ value }) => {\n      const valid = value >= min;\n      return { valid, error: valid ? null : msg || `too small - min value ${min}` };\n    });\n  },\n  max(this: Context, data: any, max: number, msg: string = \"\") {\n    return validate(this, data, ({ value }) => {\n      const valid = value <= max;\n      return { valid, error: valid ? null : msg || `too large - max value ${max}` };\n    });\n  },\n  integer(this: Context, data: any, msg: string = \"\") {\n    return validate(this, data, ({ value }) => {\n      const valid = Number.isInteger(value);\n      return { valid, error: valid ? null : msg || \"invalid integer\" };\n    });\n  }\n}\n","import { Context } from \"./types\";\n\nfunction validate(\n  self: Context,\n  data: any,\n  validator: ({ value }: { value: any }) => {\n    valid: boolean;\n    error: string | null;\n  }\n) {\n  if (!self.validate) throw new Error(\"validate is not defined in context\");\n\n  const errors = self.validate.get(\"errors\", data, []);\n  self.validate.set(\"errors\", data, errors);\n  self.validate.set(\"valid\", data, errors.length === 0);\n\n  const value = self.validate.get(\"value\", data) as any;\n  if (!Array.isArray(value)) {\n    self.validate.set(\"valid\", data, false);\n    if (!errors.includes(\"invalid array\")) {\n      errors.push(\"invalid array\");\n      self.validate.set(\"errors\", data, errors);\n    }\n    return data;\n  }\n\n  const result = validator({ value });\n  if (!result.valid) {\n    self.validate.set(\"valid\", data, false);\n    errors.push(result.error);\n    self.validate.set(\"errors\", data, errors);\n  }\n\n  return data;\n}\n\nexport const array = {\n  coerce(this: Context, data: any) {\n    try {\n      this.validate.set(\"value\", data, JSON.parse(data.value));\n    } catch (e) {}\n\n    return validate(this, data, () => {\n      return { valid: true, error: null };\n    });\n  },\n  default(this: Context, data: any, defaultValue: any[]) {\n    const value = this.validate.get(\"value\", data);\n    if (value === undefined || value === null) {\n      this.validate.set(\"value\", data, defaultValue);\n    }\n\n    return validate(this, data, () => {\n      return { valid: true, error: null };\n    });\n  },\n  required(this: Context, data: any, msg: string = \"\") {\n    return validate(this, data, ({ value }) => {\n      const valid = value && value.length > 0;\n      return { valid, error: valid ? null : msg || \"array is required\" };\n    });\n  },\n  min(this: Context, data: any, min: number, msg: string = \"\") {\n    return validate(this, data, ({ value }) => {\n      const valid = value && value.length >= min;\n      return {\n        valid,\n        error: valid ? null : msg || `too short - min length ${min}`,\n      };\n    });\n  },\n  max(this: Context, data: any, max: number, msg: string = \"\") {\n    return validate(this, data, ({ value }) => {\n      const valid = value && value.length <= max;\n      return {\n        valid,\n        error: valid ? null : msg || `too long - max length ${max}`,\n      };\n    });\n  },\n  items(this: Context, data: any, items: any, msg: string = \"\") {\n    return validate(this, data, ({ value }) => {\n      const valid =\n        value &&\n        value.every((v: any) => {\n          const _data = {};\n          this.validate.set(\"value\", _data, v);\n\n          return items.run(_data).valid;\n        });\n      return {\n        valid,\n        error: valid\n          ? null\n          : msg ||\n            `invalid items - expected ${items.chain[0].method.split(\".\")[0]}`,\n      };\n    });\n  },\n};\n","import { Context } from \"./types\";\n\nfunction validate (self: Context, data: any, validator: ({ value }: { value: any }) => { valid: boolean, error: string | null }) {\n  if (!self.validate) \n    throw new Error(\"validate is not defined in context\");\n\n  const errors = self.validate.get(\"errors\", data, []);\n  self.validate.set(\"errors\", data, errors);\n  self.validate.set(\"valid\", data, errors.length === 0);\n\n  const value = self.validate.get(\"value\", data) as any;\n  if (typeof value !== \"object\" || value === null) {\n    self.validate.set(\"valid\", data, false);\n    if (!errors.includes(\"invalid object\")) {\n      errors.push(\"invalid object\");\n      self.validate.set(\"errors\", data, errors);\n    }\n    return data;\n  }\n\n  const result = validator({ value });\n  if (!result.valid) {\n    self.validate.set(\"valid\", data, false);\n    errors.push(result.error);\n    self.validate.set(\"errors\", data, errors);\n  }\n\n  return data;\n}\n\nexport const object = {\n  coerce(this: Context, data: any) {\n    try {\n      this.validate.set(\"value\", data, JSON.parse(data.value));\n    } catch (e) {}\n\n    return validate(this, data, () => {\n      return { valid: true, error: null };\n    });\n  },\n  default(this: Context, data: any, defaultValue: Record<string, any>) {\n    const value = this.validate.get(\"value\", data, null);\n    if (value === undefined || value === null) {\n      this.validate.set(\"value\", data, defaultValue);\n    }\n\n    return validate(this, data, () => {\n      return { valid: true, error: null };\n    });\n  },\n  required(this: Context, data: any, msg: string = \"\") {\n    return validate(this, data, ({ value }) => {\n      const valid = value && Object.keys(value).length > 0;\n      return { valid, error: valid ? null : msg || \"object is required\" };\n    });\n  },\n  props(this: Context, data: any, props: Record<string, any>, msg: string = \"\") {\n    return validate(this, data, ({ value }) => {\n      const keys = Object.keys(props);\n      let valid = true;\n      let failedKeys: string[] = [];\n\n      for (const key of keys) {\n        const validator = props[key];\n        const _data = {};\n        const errors = this.validate.get(\"errors\", _data, []);\n        this.validate.set(\"value\", _data, value[key]);\n\n        const result = validator.run(_data);\n        if (!result.valid) {\n          valid = false;\n          const _errors = this.validate.get(\"errors\", result, []);\n          errors.push(..._errors.map((err: string) => `${key}: ${err}`));\n          failedKeys.push(key);\n        }\n      }\n      if (!valid) {\n        const error = msg || failedKeys.length ? `invalid props - ${failedKeys.join(\", \")}` : \"\";\n        return { valid: false, error };\n      }\n      return { valid: true, error: null };\n    });\n  }\n}","import { Context } from \"./types\";\n\nfunction validate (self: Context, data: any, validator: ({ value }: { value: any }) => { valid: boolean, error: string | null }) {\n  if (!self.validate) \n    throw new Error(\"validate is not defined in context\");\n\n  const errors = self.validate.get(\"errors\", data, []);\n  self.validate.set(\"errors\", data, errors);\n  self.validate.set(\"valid\", data, errors.length === 0);\n\n  const value = self.validate.get(\"value\", data) as boolean;\n  if (typeof value !== \"boolean\") {\n    self.validate.set(\"valid\", data, false);\n    if (!errors.includes(\"invalid boolean\")) {\n      errors.push(\"invalid boolean\");\n      self.validate.set(\"errors\", data, errors);\n    }\n    return data;\n  }\n\n  const result = validator({ value });\n  if (!result.valid) {\n    self.validate.set(\"valid\", data, false);\n    errors.push(result.error);\n    self.validate.set(\"errors\", data, errors);\n  }\n\n  return data;\n}\n\nexport const boolean = {\n  coerce(this: Context, data: any) {\n    try {\n      const value = this.validate.get(\"value\", data, false);\n      this.validate.set(\"value\", data, Boolean(value));\n    } catch (e) {}\n\n    return validate(this, data, () => {\n      return { valid: true, error: null };\n    });\n  },\n  default(this: Context, data: any, defaultValue: boolean) {\n    const value = this.validate.get(\"value\", data, null);\n    if (value === undefined || value === null) {\n      this.validate.set(\"value\", data, defaultValue);\n    }\n    \n    return validate(this, data, () => {\n      return { valid: true, error: null };\n    });\n  },\n  required(this: Context, data: any, msg: string = \"\") {\n    return validate(this, data, ({ value }) => {\n      const valid = value !== undefined && value !== null;\n      return { valid, error: valid ? null : msg || \"boolean is required\" };\n    });\n  }\n};","import { Context } from './types';\n\nexport function get(target: 'value' | 'valid' | 'errors', data: any, defaultValue?: any) {\n  data[target] = data[target] || defaultValue;\n  return data[target];\n}\n\nexport function set(target: 'value' | 'valid' | 'errors', data: any, value: any) {\n  data[target] = value;\n  return data;\n}\n\nexport const ctx: Context = {\n  validate: { \n    set,\n    get,\n  }\n};","import { Fluent, fluent } from \"fluent\";\nimport { string } from \"./string\";\nimport { number } from \"./number\";\nimport { array } from \"./array\";\nimport { object } from \"./object\";\nimport { boolean } from \"./boolean\";\nimport { ctx } from \"./context\";\nimport type { Infer } from \"./types\";\n\nexport type Api = {\n  string: typeof string;\n  number: typeof number;\n  array: typeof array;\n  object: typeof object;\n  boolean: typeof boolean;\n};\n\nexport const api: Api = {\n  string,\n  number,\n  array,\n  object,\n  boolean,\n};\n\nexport const validate = fluent({ api, ctx }) as Fluent<Api, Api, []>;\n\nexport { Infer, ctx };"]}