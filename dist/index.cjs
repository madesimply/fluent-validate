'use strict';

var fluent = require('fluent');

var c={coerce(t){return this.validate.string(t,r=>{try{return {valid:!0,error:null,value:r.toString()}}catch{return {valid:!1,error:"invalid string"}}})},default(t,r){return this.validate.string(t,e=>r==null?{valid:!1,error:"invalid string"}:e==null?{valid:!0,error:null,value:r}:{valid:!0,error:null,value:e})},required(t,r=""){return this.validate.string(t,e=>{let n=e!=null;return {valid:n,error:n?null:r||"string is required"}})},enum(t,r,e=""){return this.validate.string(t,n=>{let i=r.includes(n);return {valid:i,error:i?null:e||"invalid value"}})},min(t,r,e=""){return this.validate.string(t,n=>{let i=!!(n&&n.length>=r);return {valid:i,error:i?null:e||`too short - min length ${r}`}})},max(t,r,e=""){return this.validate.string(t,n=>{let i=!!(n&&n.length<=r);return {valid:i,error:i?null:e||`too long - max length ${r}`}})},length(t,r,e=""){return this.validate.string(t,n=>{let i=!!(n&&n.length===r);return {valid:i,error:i?null:e||`invalid length - length ${r}`}})},match(t,r,e=""){return this.validate.string(t,n=>{let i=new RegExp(r).test(n);return {valid:i,error:i?null:e||"invalid pattern"}})}};var h={coerce(t){return this.validate.number(t,r=>{try{return {valid:!0,error:null,value:Number(r)}}catch{return {valid:!1,error:"invalid number"}}})},default(t,r){return this.validate.number(t,e=>r==null?{valid:!1,error:"invalid number"}:e==null?{valid:!0,error:null,value:r}:{valid:!0,error:null,value:e})},required(t,r=""){return this.validate.number(t,e=>{let n=e!=null;return {valid:n,error:n?null:r||"number is required"}})},enum(t,r,e=""){return this.validate.number(t,n=>{let i=r.includes(n);return {valid:i,error:i?null:e||"invalid value"}})},min(t,r,e=""){return this.validate.number(t,n=>{let i=n>=r;return {valid:i,error:i?null:e||`too small - min value ${r}`}})},max(t,r,e=""){return this.validate.number(t,n=>{let i=n<=r;return {valid:i,error:i?null:e||`too large - max value ${r}`}})},integer(t,r=""){return this.validate.number(t,e=>{let n=Number.isInteger(e);return {valid:n,error:n?null:r||"invalid integer"}})}};var y={coerce(t){return this.validate.array(t,r=>{try{return {valid:!0,error:null,value:Array.isArray(r)?r:JSON.parse(r)}}catch{return {valid:!1,error:"invalid array"}}})},default(t,r){return this.validate.array(t,e=>r==null?{valid:!1,error:"invalid array"}:e==null?{valid:!0,error:null,value:r}:{valid:!0,error:null,value:e})},required(t,r=""){return this.validate.array(t,e=>{let n=e!=null;return {valid:n,error:n?null:r||"array is required"}})},min(t,r,e=""){return this.validate.array(t,n=>{let i=n&&n.length>=r;return {valid:i,error:i?null:e||`too short - min length ${r}`}})},max(t,r,e=""){return this.validate.array(t,n=>{let i=n&&n.length<=r;return {valid:i,error:i?null:e||`too long - max length ${r}`}})},items(t,r,e=""){return this.validate.array(t,n=>{let i=n&&n.every(o=>{let a={};return this.validate.set("value",a,o),r.run(a).valid});return {valid:i,error:i?null:e||`invalid items - expected ${r.chain[0].method.split(".")[0]}`}})}};var g={coerce(t){return this.validate.object(t,r=>{try{return {valid:!0,error:null,value:JSON.parse(r)}}catch{return {valid:!1,error:"invalid object"}}})},default(t,r){return this.validate.object(t,e=>r==null?{valid:!1,error:"invalid object"}:e==null?{valid:!0,error:null,value:r}:{valid:!0,error:null,value:e})},required(t,r=""){return this.validate.object(t,e=>{let n=e!=null;return {valid:n,error:n?null:r||"object is required"}})},props(t,r,e=""){return this.validate.object(t,n=>{let i=Object.keys(r),o=!0,a=[];for(let l of i){let p=r[l],d={},b=this.validate.get("errors",d,[]);this.validate.set("value",d,n[l]);let v=p.run(d);if(!v.valid){o=!1;let x=this.validate.get("errors",v,[]);b.push(...x.map(C=>`${l}: ${C}`)),a.push(l);}}return o?{valid:!0,error:null}:{valid:!1,error:e||a.length?`invalid props - ${a.join(", ")}`:""}})}};var m={coerce(t){return this.validate.boolean(t,r=>{try{return {valid:!0,error:null,value:!!r}}catch{return {valid:!1,error:"invalid boolean"}}})},default(t,r){return this.validate.boolean(t,e=>r==null?{valid:!1,error:"invalid boolean"}:e==null?{valid:!0,error:null,value:r}:{valid:!0,error:null,value:e})},required(t,r=""){return this.validate.boolean(t,e=>{let n=e!=null;return {valid:n,error:n?null:r||"boolean is required"}})}};var f=(t,r)=>{switch(r){case"string":return typeof t=="string";case"number":return typeof t=="number";case"boolean":return typeof t=="boolean";case"array":return Array.isArray(t);case"object":return typeof t=="object";default:return !1}};function j(t,r,e){return r[t]=r[t]||e,r[t]}function $(t,r,e){return r[t]=e,r}function u(t,r,e,n){if(!t.validate)throw new Error("validate is not defined in context");let i=t.validate.get("errors",e,[]);t.validate.set("errors",e,i),t.validate.set("valid",e,i.length===0);let o=t.validate.get("value",e),a=n(o),l=a.value||o;return f(l,r)?(a.valid?a.value!==void 0&&f(a.value,r)&&t.validate.set("value",e,a.value):(t.validate.set("valid",e,!1),i.push(a.error),t.validate.set("errors",e,i)),e):(t.validate.set("valid",e,!1),i.includes(`invalid ${r}`)||(i.push(`invalid ${r}`),t.validate.set("errors",e,i)),e)}var s={validate:{set:$,get:j,string:(t,r)=>u(s,"string",t,r),number:(t,r)=>u(s,"number",t,r),boolean:(t,r)=>u(s,"boolean",t,r),object:(t,r)=>u(s,"object",t,r),array:(t,r)=>u(s,"array",t,r)}};var A={string:c,number:h,array:y,object:g,boolean:m},z=fluent.fluent({api:A,ctx:s});

exports.api = A;
exports.ctx = s;
exports.validate = z;
//# sourceMappingURL=index.cjs.map
//# sourceMappingURL=index.cjs.map