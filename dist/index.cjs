'use strict';

var fluent = require('fluent');

function l(e,t,n){if(!e.validate)throw new Error("validate is not defined in context");let r=e.validate.get("errors",t,[]);e.validate.set("errors",t,r),e.validate.set("valid",t,r.length===0);let i=e.validate.get("value",t);if(typeof i!="string")return e.validate.set("valid",t,!1),r.includes("invalid string")||(r.push("invalid string"),e.validate.set("errors",t,r)),t;let o=n({value:i});return o.valid||(e.validate.set("valid",t,!1),r.push(o.error),e.validate.set("errors",t,r)),t}var y={coerce(e){if(!this.validate)throw new Error("validate is not defined in context");try{this.validate.set("value",e,e.value.toString());}catch{}return l(this,e,()=>({valid:!0,error:null}))},default(e,t){if(!this.validate)throw new Error("validate is not defined in context");let n=this.validate.get("value",e,null);return n==null&&this.validate.set("value",e,t),l(this,e,()=>({valid:!0,error:null}))},required(e,t=""){return l(this,e,({value:n})=>{let r=!!(n&&n.length>0);return {valid:r,error:r?null:t||"string is required"}})},enum(e,t,n=""){return l(this,e,({value:r})=>{let i=t.includes(r);return {valid:i,error:i?null:n||"invalid value"}})},min(e,t,n=""){return l(this,e,({value:r})=>{let i=!!(r&&r.length>=t);return {valid:i,error:i?null:n||`too short - min length ${t}`}})},max(e,t,n=""){return l(this,e,({value:r})=>{let i=!!(r&&r.length<=t);return {valid:i,error:i?null:n||`too long - max length ${t}`}})},length(e,t,n=""){return l(this,e,({value:r})=>{let i=!!(r&&r.length===t);return {valid:i,error:i?null:n||`invalid length - length ${t}`}})},match(e,t,n=""){return l(this,e,({value:r})=>{let i=new RegExp(t).test(r);return {valid:i,error:i?null:n||"invalid pattern"}})}};function a(e,t,n){if(!e.validate)throw new Error("validate is not defined in context");let r=e.validate.get("errors",t,[]);e.validate.set("errors",t,r),e.validate.set("valid",t,r.length===0);let i=e.validate.get("value",t);if(typeof i!="number")return e.validate.set("valid",t,!1),r.includes("invalid number")||(r.push("invalid number"),e.validate.set("errors",t,r)),t;let o=n({value:i});return o.valid||(e.validate.set("valid",t,!1),r.push(o.error),e.validate.set("errors",t,r)),t}var f={coerce(e){if(!this.validate)throw new Error("validate is not defined in context");try{let t=this.validate.get("value",e,0);this.validate.set("value",e,Number(t));}catch{}return a(this,e,()=>({valid:!0,error:null}))},default(e,t){if(!this.validate)throw new Error("validate is not defined in context");let n=this.validate.get("value",e,null);return n==null&&this.validate.set("value",e,t),a(this,e,()=>({valid:!0,error:null}))},required(e,t=""){return a(this,e,({value:n})=>{let r=n!=null;return {valid:r,error:r?null:t||"number is required"}})},enum(e,t,n=""){return a(this,e,({value:r})=>{let i=t.includes(r);return {valid:i,error:i?null:n||"invalid value"}})},min(e,t,n=""){return a(this,e,({value:r})=>{let i=r>=t;return {valid:i,error:i?null:n||`too small - min value ${t}`}})},max(e,t,n=""){return a(this,e,({value:r})=>{let i=r<=t;return {valid:i,error:i?null:n||`too large - max value ${t}`}})},integer(e,t=""){return a(this,e,({value:n})=>{let r=Number.isInteger(n);return {valid:r,error:r?null:t||"invalid integer"}})}};function u(e,t,n){if(!e.validate)throw new Error("validate is not defined in context");let r=e.validate.get("errors",t,[]);e.validate.set("errors",t,r),e.validate.set("valid",t,r.length===0);let i=e.validate.get("value",t);if(!Array.isArray(i))return e.validate.set("valid",t,!1),r.includes("invalid array")||(r.push("invalid array"),e.validate.set("errors",t,r)),t;let o=n({value:i});return o.valid||(e.validate.set("valid",t,!1),r.push(o.error),e.validate.set("errors",t,r)),t}var x={coerce(e){if(!this.validate)throw new Error("validate is not defined in context");try{this.validate.set("value",e,JSON.parse(e.value));}catch{}return u(this,e,()=>({valid:!0,error:null}))},default(e,t){if(!this.validate)throw new Error("validate is not defined in context");let n=this.validate.get("value",e);return n==null&&this.validate.set("value",e,t),u(this,e,()=>({valid:!0,error:null}))},required(e,t=""){return u(this,e,({value:n})=>{let r=n&&n.length>0;return {valid:r,error:r?null:t||"array is required"}})},min(e,t,n=""){return u(this,e,({value:r})=>{let i=r&&r.length>=t;return {valid:i,error:i?null:n||`too short - min length ${t}`}})},max(e,t,n=""){return u(this,e,({value:r})=>{let i=r&&r.length<=t;return {valid:i,error:i?null:n||`too long - max length ${t}`}})},items(e,t,n=""){return u(this,e,({value:r})=>{let i=r&&r.every(o=>{if(!this.validate)throw new Error("validate is not defined in context");let s={};return this.validate.set("value",s,o),t.run(s).valid});return {valid:i,error:i?null:n||`invalid items - expected ${t.chain[0].method.split(".")[0]}`}})}};function d(e,t,n){if(!e.validate)throw new Error("validate is not defined in context");let r=e.validate.get("errors",t,[]);e.validate.set("errors",t,r),e.validate.set("valid",t,r.length===0);let i=e.validate.get("value",t);if(typeof i!="object"||i===null)return e.validate.set("valid",t,!1),r.includes("invalid object")||(r.push("invalid object"),e.validate.set("errors",t,r)),t;let o=n({value:i});return o.valid||(e.validate.set("valid",t,!1),r.push(o.error),e.validate.set("errors",t,r)),t}var p={coerce(e){if(!this.validate)throw new Error("validate is not defined in context");try{this.validate.set("value",e,JSON.parse(e.value));}catch{}return d(this,e,()=>({valid:!0,error:null}))},default(e,t){if(!this.validate)throw new Error("validate is not defined in context");let n=this.validate.get("value",e,null);return n==null&&this.validate.set("value",e,t),d(this,e,()=>({valid:!0,error:null}))},required(e,t=""){return d(this,e,({value:n})=>{let r=n&&Object.keys(n).length>0;return {valid:r,error:r?null:t||"object is required"}})},props(e,t,n=""){return d(this,e,({value:r})=>{let i=Object.keys(t),o=!0,s=[];if(!this.validate)throw new Error("validate is not defined in context");for(let v of i){let C=t[v],h={},w=this.validate.get("errors",h,[]);this.validate.set("value",h,r[v]);let g=C.run(h);if(!g.valid){o=!1;let E=this.validate.get("errors",g,[]);w.push(...E.map(j=>`${v}: ${j}`)),s.push(v);}}return o?{valid:!0,error:null}:{valid:!1,error:n||s.length?`invalid props - ${s.join(", ")}`:""}})}};function c(e,t,n){if(!e.validate)throw new Error("validate is not defined in context");let r=e.validate.get("errors",t,[]);e.validate.set("errors",t,r),e.validate.set("valid",t,r.length===0);let i=e.validate.get("value",t);if(typeof i!="boolean")return e.validate.set("valid",t,!1),r.includes("invalid boolean")||(r.push("invalid boolean"),e.validate.set("errors",t,r)),t;let o=n({value:i});return o.valid||(e.validate.set("valid",t,!1),r.push(o.error),e.validate.set("errors",t,r)),t}var m={coerce(e){if(!this.validate)throw new Error("validate is not defined in context");try{let t=this.validate.get("value",e,!1);this.validate.set("value",e,!!t);}catch{}return c(this,e,()=>({valid:!0,error:null}))},default(e,t){if(!this.validate)throw new Error("validate is not defined in context");let n=this.validate.get("value",e,null);return n==null&&this.validate.set("value",e,t),c(this,e,()=>({valid:!0,error:null}))},required(e,t=""){return c(this,e,({value:n})=>{let r=n!=null;return {valid:r,error:r?null:t||"boolean is required"}})}};function $(e,t,n){return t[e]=t[e]||n,t[e]}function q(e,t,n){return t[e]=n,t}var b={validate:{set:q,get:$}};var R={string:y,number:f,array:x,object:p,boolean:m},H=fluent.fluent({api:R,ctx:b});

exports.api = R;
exports.ctx = b;
exports.validate = H;
//# sourceMappingURL=index.cjs.map
//# sourceMappingURL=index.cjs.map